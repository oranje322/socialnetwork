{"version":3,"sources":["assets/images/user.png","components/Users/Users.module.css","components/common/Preloader/Preloader.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/unnamed.png","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormControls/FormControls.js","utils/validate/validate.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/common/Pagination/Pagination.js","components/Users/User.js","components/Users/Users.js","components/common/Preloader/Preloader.jsx","redux/users-selectros.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/common/FormControls/FormControls.module.css","components/common/Pagination/Pagination.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","delete","post","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","ADD_POST","initialState","posts","id","message","likesCount","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","dialogs","name","messages","dialogsReducer","body","newMessageBody","sidebarReducer","FOLLOW","users","totalUsersCount","isFetching","followingProgress","followSuccess","unfollowSucces","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","usersReducer","map","u","followed","count","filter","login","isAuth","setAuthUserData","getAuthUserData","dispatch","a","resultCode","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","DialogItem","props","path","dialog","Message","TextArea","hasError","meta","touched","error","styles","formControl","input","Input","required","value","maxLengthCreator","maxLength","length","maxLength100","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","connect","sendMessageCreator","Component","RedirectComponent","this","React","Pagination","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","setInputPage","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","enterPage","onBlur","currentTarget","isNaN","currentPortion","User","src","photos","small","userPhoto","disabled","some","unfollow","follow","Users","Preloader","style","ldsRing","getUsersSelector","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","getIfollowingProgressSelector","UsersContainer","getUsers","items","totalCount","ProfileStatusWithHook","editMode","setEditMode","useEffect","onDoubleClick","onChange","autoFocus","ProfileInfo","descriptionBlock","fullName","large","noAvatar","Post","AddPostFormRedux","MyPosts","postsElements","postsBlock","addPost","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","getUserProfile","withRouter","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","formError","stopSubmit","_error","formData","App","initializeApp","render","DialogsContainer","promise","Promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.f43ca616.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.5f4fcfce.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2lAr0\",\"selectedPage\":\"Users_selectedPage__1hsih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRing\":\"Preloader_ldsRing__3M3Pg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__HBtHi\"};","module.exports = __webpack_public_path__ + \"static/media/unnamed.022d2dd3.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Hl-Rn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__C1DNT\",\"item\":\"Navbar_item__2a7kE\",\"activeLink\":\"Navbar_activeLink__3Z5zu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3zg-4\",\"dialogsItems\":\"Dialogs_dialogsItems__1YFQw\",\"active\":\"Dialogs_active__3JU96\",\"messages\":\"Dialogs_messages__1znBu\",\"message\":\"Dialogs_message__1CCM7\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': '9179f9ad-aa07-46b5-abd1-3602fafa972f'}\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        ).then(response => response.data)\r\n    },\r\n    unfollow(userId) {\r\n        return (instance.delete(`follow/${userId}`))\r\n    },\r\n    follow(userId) {\r\n        return (instance.post(`follow/${userId}`))\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return (\r\n            instance.get(`profile/${userId}`))\r\n\r\n    },\r\n    getStatus (userId) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus (status) {\r\n        return instance.put('profile/status/', {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.get('auth/me')\r\n    },\r\n    login (email, password, rememberMe) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout () {\r\n        return instance.delete('auth/login')\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'profile/SET_STATUS'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setStatus(status))\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'dialogs/SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {\r\n                            ...u, followed: true\r\n                        }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {\r\n                            ...u, followed: false\r\n                        }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : [state.followingProgress.filter(id => id != action.userId)]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSucces = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        let response = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalUsersCount(response.totalCount))\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        let response = await usersAPI.unfollow(userId)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unfollowSucces(userId))\r\n        }\r\n        dispatch(toggleIsFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        let response = await usersAPI.follow(userId)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(followSuccess(userId))\r\n        }\r\n        dispatch(toggleIsFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport default usersReducer","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = '/auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, data: {id, email, login, isAuth}})\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Ошибка'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    ///other dispatch\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from './users-reducer'\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport styles from './FormControls.module.css'\r\n\r\nexport const TextArea = (props) => {\r\n    const hasError = props.meta.touched && props.meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...props.input} {...props} />\r\n            </div>\r\n            {hasError && <span> {props.meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const hasError = props.meta.touched && props.meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...props.input} {...props} />\r\n            </div>\r\n            {hasError && <span> {props.meta.error}</span>}\r\n        </div>\r\n    )\r\n}","export const required = value => {\r\n    if (value) return undefined\r\n\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validate/validate\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name={'newMessageBody'} placeholder='Enter your message' validate={[required, maxLength100]}/>\r\n\r\n                <div>\r\n                    <button>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React, {Component} from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return connectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n","import React, {useState} from 'react';\r\nimport styles from \"./Pagination.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Pagination = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    let [inputPage, setInputPage] = useState(currentPage)\r\n\r\n    const enterInputPage = (e) => {\r\n        let p = +e.currentTarget.value\r\n        if (!isNaN(p) && p != \"\") {\r\n            let currentPortion = Math.ceil(p / portionSize)\r\n            onPageChanged(p)\r\n            setInputPage(p)\r\n            setPortionNumber(currentPortion)\r\n        }\r\n    }\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n        <input className={styles.enterPage} onBlur={enterInputPage} placeholder={'Номер страницы'}/>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport styles from \"./Users.module.css\";\r\n\r\nconst User = props => {\r\n    return (\r\n        <div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.unfollow(u.id)\r\n\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.follow(u.id)\r\n\r\n                            }}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.country'}</div>\r\n                        <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from \"./User\";\r\n\r\nconst Users = (props) => {\r\n    return (\r\n        <div>\r\n            <Pagination totalItemsCount={props.totalUsersCount}\r\n                        pageSize={props.pageSize}\r\n                        currentPage={props.currentPage}\r\n                        onPageChanged={props.onPageChanged}/>\r\n\r\n            <User users={props.users}\r\n                  followingProgress={props.followingProgress}\r\n                  unfollow={props.unfollow}\r\n                  follow={props.follow}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport style from './Preloader.module.css'\r\n\r\nconst Preloader = props => {\r\n    return (\r\n    <div className={style.ldsRing}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Preloader","import React from \"react\";\r\nimport { createSelector } from 'reselect'\r\n\r\nexport const getUsersSelector = state => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSizeSelector = state => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCountSelector = state => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageSelector = state => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetchingSelector = state => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getIfollowingProgressSelector = state => {\r\n    return state.usersPage.followingProgress\r\n}\r\n\r\n","import React from \"react\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage, toggleIsFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPageSelector, getIfollowingProgressSelector, getIsFetchingSelector,\r\n    getPageSizeSelector,\r\n    getTotalUsersCountSelector,\r\n    getUsersSelector\r\n} from \"../../redux/users-selectros\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onPageChanged={this.onPageChanged}\r\n                       users={this.props.users}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                       followingProgress={this.props.followingProgress}\r\n                />\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        followingProgress: getIfollowingProgressSelector(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleIsFollowingProgress, getUsers})\r\n)(UsersContainer)\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nconst ProfileStatusWithHook = props => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = e => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                Status: <span onDoubleClick={activateEditMode}>{status || 'click' }</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHook","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport noAvatar from '../../../assets/images/unnamed.png'\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                Name: {props.profile.fullName}\r\n                <img src={props.profile.photos.large || noAvatar}/>\r\n                <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n            { props.message }\r\n            <div>\r\n                <span>like</span> { props.likesCount }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validate/validate\";\r\nimport {TextArea} from \"../../common/FormControls/FormControls\";\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    const addPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={addPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddPostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea} name={'newPostText'} placeholder={'Enter your message'} validate={[required, maxLength100]}/>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.userId\r\n        }\r\n       this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utils/validate/validate\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from '../common/FormControls/FormControls.module.css'\r\n\r\n\r\nconst LoginForm = props => {\r\n    const { handleSubmit } = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Login'} name={'email'} component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} component={Input} type={'password'} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'rememberMe'} component={Input} type={'checkbox'} validate={[required]}/> remember me\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n                {\r\n                    props.error && <div className={style.formError}>{props.error}</div>\r\n                }\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        let {email, password, rememberMe} = formData;\r\n        props.login(email, password, rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nclass App extends React.Component {\n\n    componentDidMount() {\n            this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer/>}/>\n\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n\n                    <Route path='/login'\n                           render={() => <LoginPage/>}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App)","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n            <App  />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n\nwindow.store = store\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2jXSp\",\"error\":\"FormControls_error__2YUrt\",\"formError\":\"FormControls_formError__3EJUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Pagination_paginator__3EobO\",\"pageNumber\":\"Pagination_pageNumber__3XGqf\",\"selectedPage\":\"Pagination_selectedPage__2HHze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3Z-Ny\",\"posts\":\"MyPosts_posts__ixzLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__27F-n\",\"loginBlock\":\"Header_loginBlock__2oVvJ\"};"],"sourceRoot":""}